"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const constants_1 = require("./constants");
const mime_types_1 = __importDefault(require("mime-types"));
async function a_sume(fn, throws) {
    try {
        return await fn();
    }
    catch (e) {
        throw throws(e);
    }
}
exports.a_sume = a_sume;
function s_sume(fn, throws) {
    try {
        return fn();
    }
    catch (e) {
        throw throws(e);
    }
}
exports.s_sume = s_sume;
function filenameOutsideFabLocations(filename) {
    return filename !== '/server.js' && !filename.startsWith('/_assets/');
}
exports.filenameOutsideFabLocations = filenameOutsideFabLocations;
function getContentType(pathname) {
    const mimeType = mime_types_1.default.lookup(pathname);
    return (mimeType && mime_types_1.default.contentType(mimeType)) || constants_1.DEFAULT_MIME_TYPE;
}
exports.getContentType = getContentType;
function getCacheHeaders(immutable) {
    return immutable ? constants_1.IMMUTABLE_HEADERS : constants_1.NON_IMMUTABLE_HEADERS;
}
exports.getCacheHeaders = getCacheHeaders;
function matchPath(lookup_table, _pathname) {
    const pathname = decodeURIComponent(_pathname);
    return (lookup_table[pathname] ||
        lookup_table[pathname + '.html'] ||
        lookup_table[`${pathname}${pathname.endsWith('/') ? '' : '/'}index.html`]);
}
exports.matchPath = matchPath;
exports.stripTrailingSlash = (str) => str.replace(/\/$/, '');
//# sourceMappingURL=helpers.js.map